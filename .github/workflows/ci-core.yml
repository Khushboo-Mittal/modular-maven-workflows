name: CI Core Workflow

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        type: string
        default: '17'
        description: "Java version to use (e.g., 8, 11, 17)"
    outputs:
      artifact-path:
        description: "Path to the built artifact"
        value: ${{ jobs.build.outputs.artifact-path }}
      git-version:
        description: "Git version info"
        value: ${{ jobs.version.outputs.git-version }}

jobs:
  build:
    name: Build with Maven
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.build.outputs.artifact-path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Set up JDK
        uses: actions/setup-java@main
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@main
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build project
        id: build
        run: |
          mvn clean package -DskipTests
          echo "artifact-path=target/*.jar" >> $GITHUB_OUTPUT

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Set up JDK
        uses: actions/setup-java@main
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'temurin'

      - name: Run unit tests
        continue-on-error: true
        run: mvn test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@main
        with:
          name: unit-test-results
          path: target/surefire-reports/

  version:
    name: Get Git Target Version
    runs-on: ubuntu-latest
    outputs:
      git-version: ${{ steps.get-version.outputs.git-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Get Git version
        id: get-version
        run: |
          VERSION=$(git describe --tags --always)
          echo "git-version=$VERSION" >> $GITHUB_OUTPUT
